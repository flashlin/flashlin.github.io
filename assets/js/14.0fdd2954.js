(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{384:function(e,a,r){"use strict";r.r(a);var s=r(0),t=Object(s.a)({},(function(){var e=this,a=e.$createElement,r=e._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"docker-swarm-mode"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#docker-swarm-mode","aria-hidden":"true"}},[e._v("#")]),e._v(" Docker Swarm Mode")]),e._v(" "),r("p",[e._v("需要三台主機, 這些主機。這些可以是物理機/虛擬機, 也能通過網絡進行通信. 您甚至可以在筆電上安裝Docker Machine 來替代物理機/虛擬機.")]),e._v(" "),r("p",[e._v("在每台主機上都需要Docker Engine 1.12或更高版本(內建Swarm Mode)")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://docs.docker.com/engine/swarm/swarm-tutorial/#install-docker-engine-on-linux-machines",target:"_blank",rel:"noopener noreferrer"}},[e._v("Linux Docker Engine"),r("OutboundLink")],1)]),e._v(" "),r("p",[r("a",{attrs:{href:"https://docs.docker.com/engine/swarm/swarm-tutorial/#use-docker-for-mac-or-docker-for-windows",target:"_blank",rel:"noopener noreferrer"}},[e._v("Windows Docker Desktop"),r("OutboundLink")],1)]),e._v(" "),r("blockquote",[r("p",[e._v("Docker Engine 和Docker Machine 區別?")]),e._v(" "),r("p",[e._v('人們說"Docker"時, 通常指的是Docker Engine, Docker Machine 是用於置備和管理Dockerized 主機(帶有Docker Engine 工具的主機)')])]),e._v(" "),r("p",[e._v("其中一台機器是管理員(稱為manager1), 其中兩台機器是工人(worker1和worker2).")]),e._v(" "),r("h2",{attrs:{id:"主機之間的開放協議和端口"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#主機之間的開放協議和端口","aria-hidden":"true"}},[e._v("#")]),e._v(" 主機之間的開放協議和端口")]),e._v(" "),r("p",[e._v("以下通訊阜必須可用")]),e._v(" "),r("ul",[r("li",[e._v("用於群集管理通信的TCP端口 2377")]),e._v(" "),r("li",[e._v("TCP和UDP端口 7946, 用於節點之間的通信")]),e._v(" "),r("li",[e._v("UDP端口4789, 用於覆蓋網絡流量")])]),e._v(" "),r("blockquote",[r("p",[e._v("如果計劃使用加密（--opt encrypted）創建覆蓋網絡, 則還需要確保允許ip協議50（ESP）流量。")])]),e._v(" "),r("h2",{attrs:{id:"建立一個集群"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#建立一個集群","aria-hidden":"true"}},[e._v("#")]),e._v(" 建立一個集群")]),e._v(" "),r("p",[e._v("設定 manager1: 192.168.99.100")]),e._v(" "),r("p",[e._v("在 manager1 上打開命令視窗, 如果您使用Docker Machine, 則可以使用以下命令通過SSH連接到它")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("> docker-machine ssh manager1\n")])])]),r("p",[e._v("執行以下命令創建新的群集")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("> docker swarm init --advertise-addr <MANAGER-IP>\n")])])]),r("blockquote",[r("p",[e._v("如果要使用筆電的Docker桌面來測試單節點群集, 只需docker swarm init不帶任何參數即可運行")])]),e._v(" "),r("p",[e._v("--advertise-addr 標誌將管理器節點配置為將其IP 位址發佈為192.168.99.100 , 其他節點必須能夠訪問該IP 位址.")]),e._v(" "),r("p",[e._v("執行以下命令查看群集的目前狀態")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("> docker info\n\nContainers: 2\nRunning: 0\nPaused: 0\nStopped: 2\n  ...snip...\nSwarm: active\n  NodeID: dxn1zf6l61qsb1josjja83ngz\n  Is Manager: true\n  Managers: 1\n  Nodes: 1\n  ...snip...\n")])])]),r("p",[e._v("執行命令查看有關節點的信息")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("> docker node ls\n\nID                           HOSTNAME  STATUS  AVAILABILITY  MANAGER STATUS\ndxn1zf6l61qsb1josjja83ngz *  manager1  Ready   Active        Leader\n")])])]),r("p",[e._v("在 * 旁邊的節點ID 表明目前連接此節點上")]),e._v(" "),r("h2",{attrs:{id:"將其他工作節點-work-node-添加到群集中"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#將其他工作節點-work-node-添加到群集中","aria-hidden":"true"}},[e._v("#")]),e._v(" 將其他工作節點(work node)添加到群集中")]),e._v(" "),r("p",[e._v('打開 worker1 終端視窗, 執行上述 "建立集群" 教學步驟中docker swarm init 輸出產生的 join 命令')]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("> docker swarm join \\\n  --token  SWMTKN-1-49nj1cmql0jkz5s954yi3oex3nedyz0fb0xx14ie39trti4wxv-8vxv8rssmk743ojnwacrr2e7c \\\n  192.168.99.100:2377\n\nThis node joined a swarm as a worker.\n")])])]),r("p",[e._v("如果遺失 manager1 中的建立集群命令結果, 則可以在 manager1 管理器節點上, 執行以下命令重新顯示 join 指令")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("> docker swarm join-token worker\n\nTo add a worker to this swarm, run the following command:\n\n    docker swarm join \\\n    --token SWMTKN-1-49nj1cmql0jkz5s954yi3oex3nedyz0fb0xx14ie39trti4wxv-8vxv8rssmk743ojnwacrr2e7c \\\n    192.168.99.100:2377\n")])])]),r("p",[e._v("接著打開 worker2 命令視窗, 同樣地也執行 join 指令, 建立另一個 worker2 工作節點加入現有的集群")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("> docker swarm join \\\n  --token SWMTKN-1-49nj1cmql0jkz5s954yi3oex3nedyz0fb0xx14ie39trti4wxv-8vxv8rssmk743ojnwacrr2e7c \\\n  192.168.99.100:2377\n\nThis node joined a swarm as a worker.\n")])])]),r("p",[e._v("接著回到 manager1 管理節點, 打開終端機命令視窗查看所有節點的目前狀態")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("> docker node ls\n\nID                           HOSTNAME  STATUS  AVAILABILITY  MANAGER STATUS\n03g1y59jwfg7cf99w4lt0f662    worker2   Ready   Active\n9j68exjopxe7wfl6yuxml7a7j    worker1   Ready   Active\ndxn1zf6l61qsb1josjja83ngz *  manager1  Ready   Active        Leader\n")])])]),r("blockquote",[r("p",[e._v("集群管理命令docker node ls 僅在管理器節點上起作用")])]),e._v(" "),r("h2",{attrs:{id:"在集群佈署服務"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#在集群佈署服務","aria-hidden":"true"}},[e._v("#")]),e._v(" 在集群佈署服務")]),e._v(" "),r("p",[e._v("在管理節點上打開終端機命令視窗")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("> docker service create --replicas 1 --name helloworld alpine ping docker.com\n\n9uk4639qpg7npwf3fn2aasksr\n")])])]),r("ul",[r("li",[e._v("docker service create 命令創建服務")]),e._v(" "),r("li",[e._v("--name 標誌為服務命名 helloworld")]),e._v(" "),r("li",[e._v("--replicas 標誌指定1 個運行實例")]),e._v(" "),r("li",[e._v("參數alpine ping docker.com 將服務定義為執行命令的Alpine Linux容器 ping docker.com")])]),e._v(" "),r("p",[e._v("執行下面管理命令查看正在運行的服務列表")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("> docker service ls\n\nID            NAME        SCALE  IMAGE   COMMAND\n9uk4639qpg7n  helloworld  1/1    alpine  ping docker.com\n")])])]),r("h2",{attrs:{id:"檢查集群中的服務"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#檢查集群中的服務","aria-hidden":"true"}},[e._v("#")]),e._v(" 檢查集群中的服務")]),e._v(" "),r("p",[e._v("執行管理命令\ndocker service inspect --pretty <SERVICE-ID> 以易於閱讀的格式顯示有關服務的詳細信息")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[manager1]$ docker service inspect --pretty helloworld\n\nID:\t\t9uk4639qpg7npwf3fn2aasksr\nName:\t\thelloworld\nService Mode:\tREPLICATED\n Replicas:\t\t1\nPlacement:\nUpdateConfig:\n Parallelism:\t1\nContainerSpec:\n Image:\t\talpine\n Args:\tping docker.com\nResources:\nEndpoint Mode:  vip\n")])])]),r("p",[e._v("如果要以json 格式返回服務詳細信息, 請執行不帶 --pretty 標誌的相同命令")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[manager1]$ docker service inspect helloworld\n")])])]),r("p",[e._v("執行 docker service ps <SERVICE-ID> 以查看哪些節點正在運行服務")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[manager1]$ docker service ps helloworld\n\nNAME                                    IMAGE   NODE     DESIRED STATE  CURRENT STATE           ERROR               PORTS\nhelloworld.1.8p1vev3fq5zm0mi8g0as41w35  alpine  worker2  Running        Running 3 minutes\n")])])]),r("p",[e._v("在這種情況下, 該helloworld 服務的一個實例正在 worker2 節點上運行")]),e._v(" "),r("h2",{attrs:{id:"擴展服務群"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#擴展服務群","aria-hidden":"true"}},[e._v("#")]),e._v(" 擴展服務群")]),e._v(" "),r("p",[e._v("一旦你已經部署了服務的群體, 你就可以使用下面命令控制服務容器的數量.")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("> docker service scale helloworld=5\n\nhelloworld scaled to 5\n")])])]),r("p",[e._v("執行 docker service ps <SERVICE-ID> 以查看更新的任務列表")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("> docker service ps helloworld\n\nNAME                                    IMAGE   NODE      DESIRED STATE  CURRENT STATE\nhelloworld.1.8p1vev3fq5zm0mi8g0as41w35  alpine  worker2   Running        Running 7 minutes\nhelloworld.2.c7a7tcdq5s0uk3qr88mf8xco6  alpine  worker1   Running        Running 24 seconds\nhelloworld.3.6crl09vdcalvtfehfh69ogfb1  alpine  worker1   Running        Running 24 seconds\nhelloworld.4.auky6trawmdlcne8ad8phb0f1  alpine  manager1  Running        Running 24 seconds\nhelloworld.5.ba19kca06l18zujfwxyc5lkyn  alpine  worker2   Running        Running 24 seconds\n")])])]),r("p",[e._v("您可以看到 swarm 建立了4 個新任務, 可以擴展到總共5 個Alpine Linux 運行實例. 任務分佈在群集的三個節點之間, 一個實例在 manager1 節點上運行.")]),e._v(" "),r("h2",{attrs:{id:"刪除集群上運行的服務"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#刪除集群上運行的服務","aria-hidden":"true"}},[e._v("#")]),e._v(" 刪除集群上運行的服務")]),e._v(" "),r("p",[e._v("執行 docker service rm helloworld 以刪除該 helloworld 服務")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[manager1]$ docker service rm helloworld\n\nhelloworld\n")])])]),r("p",[e._v("執行 docker service inspect <SERVICE-ID> 以驗證群管理器已刪除該服務")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[manager1]$ docker service inspect helloworld\n[]\nError: no such service: helloworld\n")])])]),r("h2",{attrs:{id:"滾動更新服務"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#滾動更新服務","aria-hidden":"true"}},[e._v("#")]),e._v(" 滾動更新服務")]),e._v(" "),r("p",[e._v("在前面你學會了如何縮放服務實例的數量. 在本部分中，您學會Redis 3.0.6 容器標籤部署服務. 然後透過滾動更新, 將服務升級為使用Redis 3.0.7 容器映像.")]),e._v(" "),r("p",[e._v("下面指令將 Redis 佈署到群集, 並以10 秒鐘的更新延遲配置群集. 請注意, 以下示例發布版本較舊的 Redis")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[manager1]$ docker service create \\\n  --replicas 3 \\\n  --name redis \\\n  --update-delay 10s \\\n  redis:3.0.6\n\n0u6a4s31ybk7yw2wyvtikmu50\n")])])]),r("ul",[r("li",[e._v('--update-delay 標誌配置在更新一個服務任務或一組任務之間的時間延遲. 您可以將時間描述T為秒Ts , 分鐘Tm 或小時數的組合Th. 因此 10m30s 表示 "10分鐘30秒" 延遲')])]),e._v(" "),r("p",[e._v("現在你可以更新的容器映像redis. 群集管理器根據以下UpdateConfig 策略將更新應用於節點")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[manager1]$ docker service update --image redis:3.0.7 redis\n")])])]),r("p",[e._v("執行下面指令查看服務狀態")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[manager1]$ docker service inspect --pretty redis\n\nID:             0u6a4s31ybk7yw2wyvtikmu50\nName:           redis\n...snip...\nUpdate status:\n State:      paused\n Started:    11 seconds ago\n Message:    update paused due to failure or early termination of task 9p7ith557h8ndf0ui9s0q951b\n...snip...\n")])])]),r("p",[e._v("要重新啟動暫停的更新，請執行 docker service update <SERVICE-ID>")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[manager1]$ docker service update redis\n")])])]),r("p",[e._v("執行 docker service ps <SERVICE-ID> 以觀看滾動更新")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[manager1]$ docker service ps redis\n\nNAME                                   IMAGE        NODE       DESIRED STATE  CURRENT STATE            ERROR\nredis.1.dos1zffgeofhagnve8w864fco      redis:3.0.7  worker1    Running        Running 37 seconds\n \\_ redis.1.88rdo6pa52ki8oqx6dogf04fh  redis:3.0.6  worker2    Shutdown       Shutdown 56 seconds ago\nredis.2.9l3i4j85517skba5o7tn5m8g0      redis:3.0.7  worker2    Running        Running About a minute\n \\_ redis.2.66k185wilg8ele7ntu8f6nj6i  redis:3.0.6  worker1    Shutdown       Shutdown 2 minutes ago\nredis.3.egiuiqpzrdbxks3wxgn8qib1g      redis:3.0.7  worker1    Running        Running 48 seconds\n \\_ redis.3.ctzktfddb2tepkr45qcmqln04  redis:3.0.6  mmanager1  S\n")])])]),r("h2",{attrs:{id:"維護集群上的某一個節點"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#維護集群上的某一個節點","aria-hidden":"true"}},[e._v("#")]),e._v(" 維護集群上的某一個節點")]),e._v(" "),r("p",[e._v("正常來說所有節點均在 ACTIVE 可用性下運行.\n有時後, 例如計劃的維護時間, 您需要將節點設置為 DRAIN 可用性. DRAIN 可用性阻止節點從群集管理器接收新任務.")]),e._v(" "),r("p",[e._v("輸入下面管理命令來設定某一個節點為 drain 狀態")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[manager1]$ docker node update --availability drain worker1\n")])])]),r("p",[e._v("檢查節點以檢查其可用性")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[manager1]$ docker node inspect --pretty worker1\n\nID:\t\t\t38ciaotwjuritcdtn9npbnkuz\nHostname:\t\tworker1\nStatus:\n State:\t\t\tReady\n Availability:\t\tDrain\n...snip...\n")])])]),r("p",[e._v("worker1 節點顯示AVAILABILITY 為Drain")]),e._v(" "),r("p",[e._v("執行 docker service ps redis 以查看群管理器如何更新服務的任務分配redis")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[manager1]$ docker service ps redis\n\nNAME                                    IMAGE        NODE      DESIRED STATE  CURRENT STATE           ERROR\nredis.1.7q92v0nr1hcgts2amcjyqg3pq       redis:3.0.6  manager1  Running        Running 4 minutes\nredis.2.b4hovzed7id8irg1to42egue8       redis:3.0.6  worker2   Running        Running About a minute\n \\_ redis.2.7h2l8h3q3wqy5f66hlv9ddmi6   redis:3.0.6  worker1   Shutdown       Shutdown 2 minutes ago\nredis.3.9bg7cezvedmkgg6c8yzvbhwsd       redis:3.0.6  worker2   Running\n")])])]),r("p",[e._v("下面指令可將節點恢復為活動狀態")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[manager1]$ docker node update --availability active worker1\n\nworker1\n")])])]),r("h2",{attrs:{id:"發布服務端口"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#發布服務端口","aria-hidden":"true"}},[e._v("#")]),e._v(" 發布服務端口")]),e._v(" "),r("p",[e._v("創建服務時, 如果不使用 published 端口, docker engine 則會為每個服務任務綁定一個隨機的高編號端口.")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[manager1]$ docker service create \\\n  --name <SERVICE-NAME> \\\n  --publish published=<PUBLISHED-PORT>,target=<CONTAINER-PORT> \\\n  <IMAGE>\n")])])]),r("p",[e._v("或者用")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[manager1]$ docker service create \\\n  --name <SERVICE-NAME> \\\n  -p <PUBLISHED-PORT>:<CONTAINER-PORT>\n  <IMAGE>\n")])])]),r("p",[e._v("你也可以使用以下命令發布現有服務的端口")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[manager1]$ docker service update \\\n  --publish-add published=<PUBLISHED-PORT>,target=<CONTAINER-PORT> \\\n  <SERVICE>\n")])])]),r("p",[e._v("你也能查看服務目前的發布端口")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('[manager1]$ docker service inspect --format="{{json .Endpoint.Spec.Ports}}" my-web\n\n\n[{"Protocol":"tcp","TargetPort":80,"PublishedPort":8080}]\n')])])]),r("p",[e._v("下面語法加上了 udp 發布端口的示範")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[manager1]$ docker service create --name dns-cache \\\n  -p 53:53 \\\n  -p 53:53/udp \\\n  dns-cache\n")])])]),r("h2",{attrs:{id:"刪除服務"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#刪除服務","aria-hidden":"true"}},[e._v("#")]),e._v(" 刪除服務")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[manager1]$ docker service remove my_web\n")])])]),r("h2",{attrs:{id:"配置運行時環境"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#配置運行時環境","aria-hidden":"true"}},[e._v("#")]),e._v(" 配置運行時環境")]),e._v(" "),r("p",[e._v("您可以在容器中為運行時環境配置以下選項, 以下服務的容器的環境變數 $MYVAR 設置為myvalue, 從/tmp/ 目錄運行, 並以my_user 用戶身份運行")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("$ docker service create --name helloworld \\\n  --env MYVAR=myvalue \\\n  --workdir /tmp \\\n  --user my_user \\\n  alpine ping docker.com\n")])])]),r("p",[e._v("要更新現有服務運行的命令, 可以使用該--args 標誌. 以下示例更新了一個現有服務 helloworld , 以使其運行命令ping docker.com 而不是之前運行的命令")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('[manager1]$ docker service update --args "ping docker.com" helloworld\n')])])]),r("h2",{attrs:{id:"配置外部負載均衡器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#配置外部負載均衡器","aria-hidden":"true"}},[e._v("#")]),e._v(" 配置外部負載均衡器")]),e._v(" "),r("p",[e._v("您可以配置負載平衡器以平衡群集中每個節點之間的請求, 例如你可在以下 HAProxy 配置中/etc/haproxy/haproxy.cfg")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("global\n  log /dev/log    local0\n  log /dev/log    local1 notice\n...snip...\n\n# Configure HAProxy to listen on port 80\nfrontend http_front\n   bind *:80\n   stats uri /haproxy?stats\n   default_backend http_back\n\n# Configure HAProxy to route requests to swarm nodes on port 8080\nbackend http_back\n   balance roundrobin\n   server node1 192.168.99.100:8080 check\n   server node2 192.168.99.101:8080 check\n   server node3 192.168.99.102:8080 check\n")])])]),r("p",[e._v("當您在端口80上訪問HAProxy負載平衡器時, 它將請求轉發到群集中的任何節點.")]),e._v(" "),r("h2",{attrs:{id:"使用私有註冊表-private-registery-上的映像檔來建立服務"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#使用私有註冊表-private-registery-上的映像檔來建立服務","aria-hidden":"true"}},[e._v("#")]),e._v(" 使用私有註冊表(private registery)上的映像檔來建立服務")]),e._v(" "),r("p",[e._v("如果您的映像檔存儲在 registry.example.com 私有註冊表上, 請使用如下命令")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[manager1]$ docker login registry.example.com\n\n[manager1]$ docker service  create \\\n  --with-registry-auth \\\n  --name my_service \\\n  registry.example.com/acme/my_image:latest\n")])])]),r("h2",{attrs:{id:"放置約束"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#放置約束","aria-hidden":"true"}},[e._v("#")]),e._v(" 放置約束")]),e._v(" "),r("p",[e._v("使用放置約束來控制可以將服務分配給的節點, 以下示例中, 服務僅在標籤 region 設置為 east 的節點上運行. 如果沒有適當標記的節點可用, 則分配任務將等待 Pending 直到它們變為可用.")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[manager1]$ docker service create \\\n  --name my-nginx \\\n  --replicas 5 \\\n  --constraint node.labels.region==east \\\n  nginx\n")])])]),r("h2",{attrs:{id:"回滾到服務的先前版本"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#回滾到服務的先前版本","aria-hidden":"true"}},[e._v("#")]),e._v(" 回滾到服務的先前版本")]),e._v(" "),r("p",[e._v("如果服務的更新版本無法按預期運行, 可以使用下面指令手動回滾到服務的先前版本")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[manager1]$ docker service update \\\n  --rollback \\\n  --update-delay 0s\n  my_web\n")])])]),r("h2",{attrs:{id:"如果更新失敗-將自動回滾"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#如果更新失敗-將自動回滾","aria-hidden":"true"}},[e._v("#")]),e._v(" 如果更新失敗, 將自動回滾")]),e._v(" "),r("p",[e._v("您可以通過以下方式配置服務：如果對服務的更新導致重新部署失敗, 則該服務可以自動回滾到以前的配置. 這有助於保護服務可用性")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("設定參數")]),e._v(" "),r("th",[e._v("默認")]),e._v(" "),r("th",[e._v("描述")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("--rollback-delay")]),e._v(" "),r("td",[e._v("0s")]),e._v(" "),r("td",[e._v("回滾任務後回滾下一個任務要等待的時間. 0 表示在第一個回滾任務部署後立即回滾第二個任務")])]),e._v(" "),r("tr",[r("td",[e._v("--rollback-failure-action")]),e._v(" "),r("td",[e._v("pause")]),e._v(" "),r("td",[e._v("當任務無法回滾時, 是回滾 pause 還是continue 嘗試回滾其他任務")])]),e._v(" "),r("tr",[r("td",[e._v("--rollback-max-failure-ratio")]),e._v(" "),r("td",[e._v("0")]),e._v(" "),r("td",[e._v("回滾期間可容忍的失敗率, 指定為 0到1 之間的浮點數. 例如給定 5 個任務, 失敗率 .2 則表示可容忍一個任務無法回滾. 0 表示不允許任何故障, 而 值 1 表示可允許任何數量的故障.")])]),e._v(" "),r("tr",[r("td",[e._v("--rollback-monitor")]),e._v(" "),r("td",[e._v("5s")]),e._v(" "),r("td",[e._v("每個任務回滾後監視失敗的持續時間. 如果任務在此時間段之前停止, 則回滾被視為失敗.")])]),e._v(" "),r("tr",[r("td",[e._v("--rollback-parallelism")]),e._v(" "),r("td",[e._v("1")]),e._v(" "),r("td",[e._v("並行回滾的最大任務數. 默認情況下, 一次回滾一個任務. 值為 0 則會使所有任務並行回滾.")])])])]),e._v(" "),r("p",[e._v("以下示例將 redis 服務配置為在無法部署 docker 服務更新時自動回滾. 可以並行回滾兩個任務, 回滾後會監視任務20秒鐘, 以確保它們不會退出, 並且允許的最大失敗率為20%")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[manager1]$ docker service create --name=my_redis \\\n   --replicas=5 \\\n   --rollback-parallelism=2 \\\n   --rollback-monitor=20s \\\n   --rollback-max-failure-ratio=.2 \\\n   redis:latest\n")])])]),r("p",[e._v("https://github.com/DockStation/dockstation/releases/tag/v1.5.1")])])}),[],!1,null,null,null);a.default=t.exports}}]);
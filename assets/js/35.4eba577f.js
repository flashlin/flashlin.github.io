(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{386:function(a,t,e){"use strict";e.r(t);var r=e(0),s=Object(r.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"curring-柯里化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#curring-柯里化","aria-hidden":"true"}},[a._v("#")]),a._v(" Curring 柯里化")]),a._v(" "),e("p",[a._v("柯里化(Curring) -- 接受多個參數的函數變換成接受一個單一參數的函數, 並且返回接受餘下的參數而且返回結果的新函數的技術.")]),a._v(" "),e("p",[a._v("啥!? 聽不懂. 連我都聽得霧煞煞.")]),a._v(" "),e("p",[a._v("例如這有一個 add 方法如下所示")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("function add(a: number, b:number) : number {\n   return a + b;\n}\n")])])]),e("p",[a._v("正常呼叫 add 方法是")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("add(1, 2)\n")])])]),e("p",[a._v("但我們想要宣告一個函數 foo 等於 add 方法, 然後呼叫這個 foo 方式是")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("(foo(1))(2)\n")])])]),e("p",[a._v('add 方法需要兩個輸入參數, 但我們透過一個技術, 把原本要兩個輸入參數的 add 方法, 變成 foo 方法, 而 foo 的方法只需要一個參數, 這就是 "柯里化".')]),a._v(" "),e("p",[a._v('注意, add 方法原本是回傳數字, 但經過 "柯里化" 的 foo 方法回傳的是函數.')]),a._v(" "),e("p",[a._v("這樣整個過程應該了解了吧?")])])}),[],!1,null,null,null);t.default=s.exports}}]);
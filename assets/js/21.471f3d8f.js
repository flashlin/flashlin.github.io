(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{404:function(e,t,r){"use strict";r.r(t);var a=r(0),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"quartz-with-dotnet-core-di"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#quartz-with-dotnet-core-di","aria-hidden":"true"}},[e._v("#")]),e._v(" Quartz with Dotnet core DI")]),e._v(" "),r("p",[e._v("如何用Dotnet Core DI 注入Quartz Job 所需的依賴物件(Dependency Objects)?")]),e._v(" "),r("p",[e._v("建立好 Quartz Job 之後")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("public class SomeJob : IJob \n{\n    public SomeJob(...) \n    {\n        //...\n    }\n}\n")])])]),r("p",[e._v("首先自行建立 MyJobFactory 自訂的工廠物件並實作 Quartz 提供的 IJobFactory")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("public class MyJobFactory : IJobFactory\n{\n    private readonly IServiceProvider _serviceProvider;\n\n    public MyJobFactory(IServiceProvider serviceProvider)\n    {\n        _serviceProvider = serviceProvider;\n    }\n\n    public IJob NewJob(TriggerFiredBundle bundle, IScheduler scheduler)\n    {\n        return _serviceProvider.GetService(bundle.JobDetail.JobType) as IJob;\n    }\n\n    public void ReturnJob(IJob job)\n    {\n        var disposable = job as IDisposable;\n        disposable?.Dispose();\n    }\n}\n")])])]),r("p",[e._v("建立自己的排程服務, 並將IJobFactory 從建構元傳入")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('public class MyScheduler\n{\n    public MyScheduler(IJobFactory myJobFactory)\n    {\n\t    _scheduler = new StdSchedulerFactory().GetScheduler().Result;\n\t\t_scheduler.JobFactory = myJobFactory;\n    }\n\n    public void Start()\n    {\n        var job = CreateJob<SomeJob>();\n        var trigger = TriggerBuilder.Create().StartNow()\n            .WithCronSchedule("0/10 ...").Build();\n        _scheduler.ScheduleJob(job, trigger);\n        _scheduler.Start();\n    }\n\n    public IJobDetail CreateJob<T>() where T : IJob\n    {\n        return JobBuilder.Create<T>()\n            .WithIdentity(typeof(T).Name)\n            .Build();\n    }\n}\n')])])]),r("p",[e._v("建立擴充方法")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("public static class QuartzExtensions \n{\n    public static void UseQuartz(this IApplicationBuilder app)\n    {\n        var scheduler = app.ApplicationServices.GetService<IMyScheduler>();   \n        scheduler.Start();\n    }\n}\n")])])]),r("p",[e._v("在 Startup.cs 檔案中註冊好所有的物件並呼叫 UseQuartz() 方法啟動排程")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("public void Configure(IApplicationBuilder app, IHostingEnvironment env)\n{\n    app.UseQuartz();\n}\n")])])]),r("p",[e._v("如此一來我們可以透過 CreateJob"),r("SomeJob",[e._v("() 建立 Job 物件, DI 會自動幫我們注入所需的依賴物件.")])],1)])}),[],!1,null,null,null);t.default=n.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{375:function(e,t,r){"use strict";r.r(t);var s=r(9),a=Object(s.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"ioc-進階應用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ioc-進階應用","aria-hidden":"true"}},[e._v("#")]),e._v(" IoC 進階應用")]),e._v(" "),r("h2",{attrs:{id:"使用相同的-iservice-但在不同的-controllers-卻又希望使用不同的實際-service"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#使用相同的-iservice-但在不同的-controllers-卻又希望使用不同的實際-service","aria-hidden":"true"}},[e._v("#")]),e._v(" 使用相同的 IService 但在不同的 Controllers 卻又希望使用不同的實際 Service")]),e._v(" "),r("p",[e._v("你問我在dotnet core 能做到嗎? 當然可以啊! 實際上, 有幾種方法可以解決此問題.")]),e._v(" "),r("p",[e._v("首先設計一個泛型 IMyService")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("public interface IMyService<T> {}\n")])])]),r("p",[e._v("再設計兩個 interface 表明有兩種實體 Service 類型")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("public interface IDog { }\npublic interface ICat { }\n")])])]),r("p",[e._v("兩個實際的 Service 都繼承 IMyService, 如下所示")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("public class DogService : IMyService<IDog> { ... }\npublic class CatService : IMyService<ICat> { ... }\n")])])]),r("p",[e._v("然後你按照下面方式註冊服務")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("services.AddScoped<IMyService<IDog>, DogService>();\nservices.AddScoped<IMyService<ICat>, CatService>();\n")])])]),r("p",[e._v("通過這種方法, 在應用程序中的任何地方, 呼叫端都使用IMyService,\n如果該實體是ICat, 將使用 CatService 來獲取它,\n但是如果實體是 IDog, 將使用 DogService 來獲取它.")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("public SomeController(IMyService<ICat> myService)\n{ ... }\n")])])]),r("p",[e._v("最後要註冊")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("services.AddMvc().AddControllersAsServices();\n")])])]),r("div",{staticClass:"tip custom-block"},[r("p",[e._v("以上是針對 IRepository"),r("TEntity",[e._v(" 服務設計處理, 想像一下,\nservices.AddScoped<IRepository"),r("Customer",[e._v(", EfRepository"),r("Customer",[e._v(">();\nservices.AddScoped<IRepository"),r("Product",[e._v(", MySqlRepository"),r("Product",[e._v(">();\n你可以針對實體是 Customer, 就用 EF 去存取.\n但如果實體是 Product, 就用 MySql 去存取")])],1)],1)],1)],1)],1)]),e._v(" "),r("p",[e._v("當然或者你也能用另外方法做")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("public class DogService : IMyService { ... }\npublic class CatService : IMyService { ... }\nservices.AddScoped<IMyService, DogService>();\nservices.AddScoped<CatService>();\nservices.AddScoped<SomeController>(x => new SomeController(x.GetRequiredService<CatService>>()));\n")])])])])}),[],!1,null,null,null);t.default=a.exports},9:function(e,t,r){"use strict";function s(e,t,r,s,a,c,i,n){var o,v="function"==typeof e?e.options:e;if(t&&(v.render=t,v.staticRenderFns=r,v._compiled=!0),s&&(v.functional=!0),c&&(v._scopeId="data-v-"+c),i?(o=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),a&&a.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(i)},v._ssrRegister=o):a&&(o=n?function(){a.call(this,this.$root.$options.shadowRoot)}:a),o)if(v.functional){v._injectStyles=o;var l=v.render;v.render=function(e,t){return o.call(t),l(e,t)}}else{var d=v.beforeCreate;v.beforeCreate=d?[].concat(d,o):[o]}return{exports:e,options:v}}r.d(t,"a",(function(){return s}))}}]);
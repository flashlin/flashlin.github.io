(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{401:function(t,e,a){"use strict";a.r(e);var n=a(4),r=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"httpclient-使用注意事項"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#httpclient-使用注意事項","aria-hidden":"true"}},[t._v("#")]),t._v(" HttpClient 使用注意事項")]),t._v(" "),a("p",[t._v("小明回報系統錯誤紀錄噴出以下例外錯誤")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Unable to connect to the remote server\nInnerException\nOnly one usage of each socket address (protocol/network address/port) is normally permitted\n")])])]),a("p",[t._v("重新檢視小明的原始碼")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('public string GetContent()\n{\n    var httpClient = new HttpClient();\n    httpClient.BaseAddress = new Uri("http://blog.flash.com/");\n    httpClient.DefaultRequestHeaders.ConnectionClose = true;\n    var result = httpclient.GetAsync("").GetAwaiter().GetResult();\n    return result.Content.ReadAsStringAsync().GetAwaiter().GetResult();\n}\n')])])]),a("p",[t._v("發現HttpClient 有實作IDisposable 介面, 依據.NET 開發人員多年所受訓練的反射動作: 遇到IDiposable 就該用using 包覆使用範圍, 用畢要儘早釋放.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('public string GetContent()\n{\n    using(var httpClient = new HttpClient())\n    {\n        httpClient.BaseAddress = new Uri("http://blog.flash.com/");\n        httpClient.DefaultRequestHeaders.ConnectionClose = true;\n        var result = httpclient.GetAsync("").GetAwaiter().GetResult();\n        return result.Content.ReadAsStringAsync().GetAwaiter().GetResult();\n    }\n}\n')])])]),a("p",[t._v("結果仍然還是有同樣的問題, 查了原因是由於HttpClient 底層沒有實作Connetion Pool 無法重複使用連線, 程式將對同一個台網站開啟 100 條Socket 連線, 而這100 條連線在HttpClient Dispose() 後會以TIME_WAIT 狀態繼續存活240 秒才被真的釋放. 當殘留連線數量龐大時, 用光可用Socket Port 號碼, 導致無法再建立新連線.")]),t._v(" "),a("blockquote",[a("p",[t._v("對於HttpClient 的最佳使用方式, 一派主張因每個HttpClient 都會建立新連線, 為免耗盡Socket 資源應儘量共用. 另一派則認為長期使用現在連線, 會遇到DNS 異動將無法更新. 故設計人員將HttpClient 何時建立及消滅設成選項, 讓開發者自己選.")])]),t._v(" "),a("p",[t._v("發現ASP.NET Core 2.1 / .NET 4.6 起推出HttpClientFactory 一舉改善前述問題.")]),t._v(" "),a("h3",{attrs:{id:"for-net-core"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-net-core","aria-hidden":"true"}},[t._v("#")]),t._v(" For .NET Core")]),t._v(" "),a("p",[t._v(".NET Core 已預設參考Microsoft.AspNetCore.App ,已內建Microsoft.Extensions.Http plugin ,故無須額外安裝套件")]),t._v(" "),a("h2",{attrs:{id:"方法1-直接註冊-httpclientfactory-使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法1-直接註冊-httpclientfactory-使用","aria-hidden":"true"}},[t._v("#")]),t._v(" 方法1: 直接註冊 HttpClientFactory 使用")]),t._v(" "),a("p",[t._v("Startup.cs")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public void ConfigureServices(IServiceCollection services)\n{\n    services.AddHttpClient();\n}\n")])])]),a("p",[t._v("在需要使用 HttpClient 的 class 中透過 .NET Core 的建構式注入")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("private readonly IHttpClientFactory _clientFactory;\npublic HomeController(IHttpClientFactory clientFactory)\n{\n    _clientFactory = clientFactory;\n}\n")])])]),a("p",[t._v("需要使用HttpClient 直接透過CreateClient 方法取得即可")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var client = _clientFactory.CreateClient()\n...\n")])])]),a("p",[t._v("或者你也能在註冊時候指定名稱及預做基本設定")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('services.AddHttpClient("flashblog", c =>\n{\n    c.BaseAddress = new Uri("https://blog.flash.com/");\n});\n')])])]),a("p",[t._v("在需要的時候直接透過CreateClient 方法並指定名稱即可")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('var client = _clientFactory.CreateClient("flashblog");\n')])])]),a("h2",{attrs:{id:"方法2-註冊方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法2-註冊方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 方法2: 註冊方法")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('services.AddHttpClient();\nservices.AddHttpClient("MyApiServerName", c =>\n{\n    c.BaseAddress = new Uri("https://my.api.com/");\n    c.DefaultRequestHeaders.Add("User-Agent", "HttpClientFactory-Sample");\n});\n\npublic class HomeController : Controller\n{\n    private readonly IHttpClientFactory _httpClientFactory;\n\n    public ValuesController(IHttpClientFactory httpClientFactory)\n    {\n        _httpClientFactory = httpClientFactory;\n    }\n\n    [HttpGet]\n    public async Task<ActionResult> Get()\n    {\n        var client = _httpClientFactory.CreateClient("MyApiServerName");\n        string result = await client.GetStringAsync("/");\n        return Ok(result);\n    }\n}\n')])])]),a("h2",{attrs:{id:"註冊方法2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#註冊方法2","aria-hidden":"true"}},[t._v("#")]),t._v(" 註冊方法2")]),t._v(" "),a("p",[t._v("或者你也能建立自己的 MyClient")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('public class MyClient\n{\n    public HttpClient Client { get; private set; }\n\n    public MyClient(HttpClient httpClient)\n    {\n        httpClient.BaseAddress = new Uri("https://my.api.com/");\n        Client = httpClient;\n    }\n\n    public async Task<string> GetData()\n    {\n        return await _client.GetStringAsync("/");\n    }\n}\n')])])]),a("p",[t._v("註冊這個物件需要 HttpClient")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("services.AddHttpClient<MyClient>();\n")])])]),a("p",[t._v("然後在需要的地方 HomeController 中這樣使用")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public class HomeController : Controller\n{\n    private readonly MyClient _client;;\n\n    public ValuesController(MyClient client)\n    {\n        _client = client;\n    }\n\n    [HttpGet]\n    public async Task<ActionResult> Get()\n    {\n        string result = await _client.GetData();\n        return Ok(result);\n    }\n}\n")])])]),a("p",[t._v("和註冊方法2 命名式的方式相比, 雖然要多寫程式碼麻煩一點, 但它有個好處")]),t._v(" "),a("ul",[a("li",[t._v("不用透過字串名稱來獲得Client, 而是直接依賴注入獲得具體的Client")]),t._v(" "),a("li",[t._v("可以在自定義的HttpClient 類中擴展共用的方法")])]),t._v(" "),a("h3",{attrs:{id:"for-net-4-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-net-4-6","aria-hidden":"true"}},[t._v("#")]),t._v(" For .NET 4.6+")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("void Test() {\n   var client = HttpClientFactory.CreateClient();\n   ...\n}\n")])])]),a("p",[t._v("不需手動回收")]),t._v(" "),a("h3",{attrs:{id:"for-net-3-5-4-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-net-3-5-4-0","aria-hidden":"true"}},[t._v("#")]),t._v(" For .NET 3.5/4.0")]),t._v(" "),a("p",[t._v("WebClient 方法沒被設計成Thread-Safe (多緒執行時會丟 NotSupportedException), 使用時用完即拋策略就對了, 每次建立WebClient 都會開新連線, 但它已是昨日黃花, 寫新程式就別再用WebClient , 改用 HttpClient 吧!(除非是 .NET 3.5/4.0)")]),t._v(" "),a("h3",{attrs:{id:"題外話"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#題外話","aria-hidden":"true"}},[t._v("#")]),t._v(" 題外話")]),t._v(" "),a("p",[t._v("Windows 可使用的port 設定可以查詢")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters\\MaxUserPort\n")])])]),a("p",[t._v("Windows 10 預設值為15000")]),t._v(" "),a("p",[t._v("Windows 環境可以透過下面設定縮短TIME-WAIT 時間")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters\\TcpTimedWaitDelay\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);